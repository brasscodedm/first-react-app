{"version":3,"sources":["utils/axios.ts","store/users/actions.ts","api/users.ts","store/users/selectors.ts","components/Users/Users.tsx","App.tsx","reportWebVitals.ts","store/users/reducer.ts","store/reducers.ts","index.tsx"],"names":["Axios","axios","create","baseURL","timeout","headers","Accept","Authorization","getUsers","createAsyncThunk","get","postUser","newUser","post","postUserRequest","getUserDetails","id","getUserDetailsRequest","deleteUser","delete","deleteUserRequest","resetUsers","createAction","selectUsers","state","users","selectIsLoadingUsers","status","selectIsRejectedUsers","Users","useSelector","isLoading","isRejectedUsers","dispatch","useDispatch","useEffect","onClick","name","email","gender","map","user","key","style","color","marginLeft","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","createReducer","builder","addCase","fulfilled","payload","data","addMatcher","action","type","endsWith","addDefaultCase","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5989fb46.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst defaultOptions ={\r\n\tbaseURL: 'https://gorest.co.in/public/v1',\r\n\ttimeout: 10000,\r\n\theaders: {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json',\r\n\t\tAuthorization: 'Bearer 08c29b7a1f0eb201f9f4b28391f78e0601cda28f917bd56d7a60bb0600ddef12'\r\n\t},\r\n};\r\n\r\nconst Axios = axios.create(defaultOptions)\r\n\r\nexport default Axios\r\n\r\n","import {createAction, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {\r\n\tdeleteUserRequest,\r\n\tgetUserDetailsRequest,\r\n\tgetUsersRequest,\r\n\tpostUserRequest\r\n} from \"../../api/users\";\r\nimport {NewUser} from \"../../interfaces/User\";\r\n\r\nexport const getUsers = createAsyncThunk('users/getUsers', () =>\r\n\tgetUsersRequest()\r\n);\r\n\r\nexport const postUser = createAsyncThunk('users/postUser', (newUser: NewUser) =>\r\n\tpostUserRequest(newUser)\r\n)\r\n\r\nexport const getUserDetails = createAsyncThunk('users/getUserDetails' , (id: string) =>\r\n\tgetUserDetailsRequest(id)\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk('users/getUserDetails' , (id: string) =>\r\n\tdeleteUserRequest(id)\r\n);\r\n\r\nexport const resetUsers = createAction('starWars/resetUsers');\r\n","import Axios from '../utils/axios'\r\nimport {ListResponse} from \"../interfaces/ListResponse\";\r\nimport {NewUser, User} from \"../interfaces/User\";\r\nimport {SingleResponse} from \"../interfaces/SingleResponse\";\r\n\r\nexport const getUsersRequest = (): Promise<ListResponse<User>> =>\r\n\tAxios.get(`users`)\r\n\r\nexport const postUserRequest = (newUser: NewUser) =>\r\n\tAxios.post(`users`, newUser )\r\n\r\nexport const getUserDetailsRequest = (id: string): Promise<SingleResponse<User>> =>\r\n\tAxios.get(`users/${id}`)\r\n\r\nexport const deleteUserRequest = (id: string): Promise<unknown> =>\r\n\tAxios.delete(`users/${id}`)\r\n","import {RootState} from \"../reducers\";\r\n\r\nexport const selectUsers = (state: RootState) => state.users.users\r\n\r\nexport const selectIsLoadingUsers = (state: RootState) => state.users.status === 'PENDING'\r\n\r\nexport const selectIsRejectedUsers = (state: RootState) => state.users.status === 'REJECTED'\r\n","import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteUser, getUserDetails, getUsers, postUser, resetUsers} from \"../../store/users/actions\";\r\nimport {NewUser} from \"../../interfaces/User\";\r\nimport {selectIsLoadingUsers, selectIsRejectedUsers, selectUsers} from \"../../store/users/selectors\";\r\n\r\nconst Users: FunctionComponent = () => {\r\n\tconst users = useSelector(selectUsers);\r\n\tconst isLoading = useSelector(selectIsLoadingUsers);\r\n\tconst isRejectedUsers = useSelector(selectIsRejectedUsers);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers());\r\n\t}, [dispatch])\r\n\r\n\r\n\tif (isLoading) {\r\n\t\treturn <div>IS LOADING...</div>\r\n\t}\r\n\r\n\tif (isRejectedUsers) {\r\n\t\treturn <div>IS REJECTED...</div>\r\n\t}\r\n\r\n\tconst onResetUsers = () => {\r\n\t\tdispatch(resetUsers());\r\n\t}\r\n\r\n\tconst onGetUserDetails = (id: string) =>  {\r\n\t\tdispatch(getUserDetails(id));\r\n\t}\r\n\r\n\tconst onDeleteUser = (id: string) => {\r\n\t\tdispatch(deleteUser(id));\r\n\t}\r\n\r\n\tconst onAddUser = () => {\r\n\t\tconst newUser: NewUser = {\r\n\t\t\tname: 'Dominik',\r\n\t\t\temail: 'asadasda3@asz.com',\r\n\t\t\tgender: 'male',\r\n\t\t\tstatus: 'active'\r\n\t\t}\r\n\r\n\t\tdispatch(postUser(newUser))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={onResetUsers}>RESET USERS</button>\r\n\t\t\t<button onClick={onAddUser}>ADD NEW USER</button>\r\n\r\n\t\t\t{users.map((user, key) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tonClick={() => onGetUserDetails(user.id)}\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t>\r\n\t\t\t\t\tId: {user.id}, Name: {user.name}\r\n\t\t\t\t\t<span style={{color: \"red\", marginLeft: '5px' }} onClick={() => onDeleteUser(user.id)}>\r\n\t\t\t\t\t\tUSUN\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Users\r\n","import React from 'react';\nimport './App.css';\nimport Users from \"./components/Users/Users\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>My first React/Redux App</h1>\n        <Users />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {User} from \"../../interfaces/User\";\r\nimport {getUsers, resetUsers} from \"./actions\";\r\nimport {ActionStatus} from \"../../interfaces/ActionStatus\";\r\n\r\ninterface InitState {\r\n\tusers: User[]\r\n\tstatus: ActionStatus,\r\n}\r\n\r\nconst initState: InitState = {\r\n\tusers: [],\r\n\tstatus: 'IDLE'\r\n}\r\n\r\nexport const users = createReducer(initState, builder =>\r\n\tbuilder\r\n\t\t.addCase(getUsers.fulfilled, (state, {payload}) => {\r\n\t\t\tstate.users = payload.data.data;\r\n\t\t})\r\n\t\t.addCase(resetUsers, state => {\r\n\t\t\tstate.users = initState.users;\r\n\t\t\tstate.status = initState.status;\r\n\t\t})\r\n\t\t.addMatcher((action) => action.type.endsWith('/pending'), ((state) => {\r\n\t\t\tstate.status = 'PENDING';\r\n\t\t}))\r\n\t\t.addMatcher((action) => action.type.endsWith('/rejected'), ((state) => {\r\n\t\t\tstate.status = 'REJECTED';\r\n\t\t}))\r\n\t\t.addMatcher((action) => action.type.endsWith('/fulfilled'), ((state) => {\r\n\t\t\tstate.status = 'FULFILLED';\r\n\t\t}))\r\n\t\t.addDefaultCase(((state) => {\r\n\t\t\tstate.status = 'IDLE'\r\n\t\t}))\r\n);\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport {users} from \"./users/reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tusers\r\n});\r\n\r\nconst initStore = () => {\r\n\treturn configureStore({\r\n\t\treducer: rootReducer,\r\n\t\tmiddleware: getDefaultMiddleware => getDefaultMiddleware({\r\n\t\t\tserializableCheck: false,\r\n\t\t}),\r\n\t})\r\n}\r\n\r\nconst store = initStore();\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/reducers\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}